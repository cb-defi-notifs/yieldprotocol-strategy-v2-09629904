/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { ICauldron } from "../ICauldron";

export class ICauldron__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICauldron {
    return new Contract(address, _abi, signerOrProvider) as ICauldron;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "baseId",
        type: "bytes6",
      },
      {
        internalType: "bytes6",
        name: "ilkId",
        type: "bytes6",
      },
    ],
    name: "debt",
    outputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "max",
            type: "uint96",
          },
          {
            internalType: "uint24",
            name: "min",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "dec",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "sum",
            type: "uint128",
          },
        ],
        internalType: "struct DataTypes.Debt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
